{
  "openapi": "3.1.0",
  "info": {
    "title": "WooCombine API",
    "version": "1.0.2"
  },
  "paths": {
    "/api/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get Players",
        "operationId": "get_players_api_players_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerSchema"
                  },
                  "title": "Response Get Players Api Players Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Create Player",
        "operationId": "create_player_api_players_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/players/{player_id}": {
      "put": {
        "tags": [
          "Players"
        ],
        "summary": "Update Player",
        "operationId": "update_player_api_players__player_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Player Id"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/players/upload": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Upload Players",
        "operationId": "upload_players_api_players_upload_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/players/reset": {
      "delete": {
        "tags": [
          "Players"
        ],
        "summary": "Reset Players",
        "operationId": "reset_players_api_players_reset_delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rankings": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "Get Rankings",
        "operationId": "get_rankings_api_rankings_get",
        "parameters": [
          {
            "name": "age_group",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Age Group"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "weight_40m_dash",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Weight 40M Dash"
            }
          },
          {
            "name": "weight_vertical_jump",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Weight Vertical Jump"
            }
          },
          {
            "name": "weight_catching",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Weight Catching"
            }
          },
          {
            "name": "weight_throwing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Weight Throwing"
            }
          },
          {
            "name": "weight_agility",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Weight Agility"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{league_id}/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "List Players",
        "operationId": "list_players_api_leagues__league_id__players_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "League Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Add Player",
        "operationId": "add_player_api_leagues__league_id__players_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "League Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{league_id}/players/{player_id}/drill_results": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "List Drill Results",
        "operationId": "list_drill_results_api_leagues__league_id__players__player_id__drill_results_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "League Id"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Player Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/me": {
      "get": {
        "tags": [
          "Leagues"
        ],
        "summary": "Get My Leagues",
        "operationId": "get_my_leagues_api_leagues_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/leagues": {
      "post": {
        "tags": [
          "Leagues"
        ],
        "summary": "Create League",
        "operationId": "create_league_api_leagues_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Req"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/leagues/join/{code}": {
      "post": {
        "tags": [
          "Leagues"
        ],
        "summary": "Join League",
        "operationId": "join_league_api_leagues_join__code__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "Code"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": true
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{league_id}/teams": {
      "get": {
        "tags": [
          "Leagues"
        ],
        "summary": "List Teams",
        "operationId": "list_teams_api_leagues__league_id__teams_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{league_id}/invitations": {
      "get": {
        "tags": [
          "Leagues"
        ],
        "summary": "List Invitations",
        "operationId": "list_invitations_api_leagues__league_id__invitations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/drill-results/": {
      "post": {
        "tags": [
          "Drills"
        ],
        "summary": "Create Drill Result",
        "description": "Create a new drill result for a player",
        "operationId": "create_drill_result_api_drill_results__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrillResultCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Drill Result Api Drill Results  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/leagues/{league_id}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List Events",
        "operationId": "list_events_api_leagues__league_id__events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 500,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_leagues__league_id__events_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EventCreateRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/leagues/{league_id}/events/{event_id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get Event",
        "operationId": "get_event_api_leagues__league_id__events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update Event",
        "operationId": "update_event_api_leagues__league_id__events__event_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EventUpdateRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete Event",
        "description": "Delete an event and all associated data (requires organizer role)",
        "operationId": "delete_event_api_leagues__league_id__events__event_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "League Id"
            }
          },
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^.{1,50}$",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "description": "Get the current user's profile information with caching",
        "operationId": "get_current_user_profile_api_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/role": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Set user role",
        "description": "Set the role for the current user with simplified auth for onboarding",
        "operationId": "set_user_role_api_users_role_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/debug-role": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Debug role setting with simplified auth",
        "description": "Debug endpoint for role setting with detailed logging",
        "operationId": "debug_set_user_role_api_users_debug_role_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/users/role-simple": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Simple role setting for onboarding issues",
        "description": "Simplified role setting endpoint for Firebase configuration issues.\nUses basic auth header extraction without complex verification.",
        "operationId": "set_user_role_simple_api_users_role_simple_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{event_id}/evaluators": {
      "get": {
        "tags": [
          "Evaluators"
        ],
        "summary": "Get Event Evaluators",
        "description": "Get all evaluators for an event",
        "operationId": "get_event_evaluators_api_events__event_id__evaluators_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluatorSchema"
                  },
                  "title": "Response Get Event Evaluators Api Events  Event Id  Evaluators Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Evaluators"
        ],
        "summary": "Add Evaluator",
        "description": "Add an evaluator to an event (requires organizer/coach role)",
        "operationId": "add_evaluator_api_events__event_id__evaluators_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEvaluatorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{event_id}/evaluations": {
      "post": {
        "tags": [
          "Evaluators"
        ],
        "summary": "Submit Drill Evaluation",
        "description": "Submit a drill evaluation from an evaluator",
        "operationId": "submit_drill_evaluation_api_events__event_id__evaluations_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrillEvaluationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{event_id}/players/{player_id}/evaluations": {
      "get": {
        "tags": [
          "Evaluators"
        ],
        "summary": "Get Player Evaluations",
        "description": "Get all evaluations for a specific player",
        "operationId": "get_player_evaluations_api_events__event_id__players__player_id__evaluations_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          },
          {
            "name": "player_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Player Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{event_id}/aggregated-results": {
      "get": {
        "tags": [
          "Evaluators"
        ],
        "summary": "Get Aggregated Results",
        "description": "Get aggregated drill results for all players in an event",
        "operationId": "get_aggregated_results_api_events__event_id__aggregated_results_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/batch/players": {
      "post": {
        "tags": [
          "Batch Operations"
        ],
        "summary": "Get Batch Players",
        "description": "Get players for multiple events in a single request\nReduces API call overhead for pages that need data from multiple events",
        "operationId": "get_batch_players_api_batch_players_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPlayerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/batch/events": {
      "post": {
        "tags": [
          "Batch Operations"
        ],
        "summary": "Get Batch Events",
        "description": "Get events for multiple leagues in a single request\nOptimizes dashboard loading and multi-league views",
        "operationId": "get_batch_events_api_batch_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/batch/events-by-ids": {
      "post": {
        "tags": [
          "Batch Operations"
        ],
        "summary": "Get Batch Events By Ids",
        "description": "Get multiple events by their event IDs.",
        "operationId": "get_batch_events_by_ids_api_batch_events_by_ids_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchEventsByIdsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/batch/dashboard-data/{league_id}": {
      "get": {
        "tags": [
          "Batch Operations"
        ],
        "summary": "Get Dashboard Data",
        "description": "Get all dashboard data in a single optimized request\nIncludes league info, events, and player counts",
        "operationId": "get_dashboard_data_api_batch_dashboard_data__league_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "league_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "League Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/meta": {
      "get": {
        "summary": "Meta",
        "operationId": "meta_api_meta_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "summary": "Health Check",
        "description": "Simple health check that tests key system components",
        "operationId": "health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Simple Health",
        "description": "Minimal health check endpoint for deployment monitoring",
        "operationId": "simple_health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "head": {
        "summary": "Simple Health",
        "description": "Minimal health check endpoint for deployment monitoring",
        "operationId": "simple_health_health_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/warmup": {
      "get": {
        "summary": "Warmup Endpoint",
        "description": "Enhanced warmup endpoint with parallel operations for faster cold start recovery",
        "operationId": "warmup_endpoint_api_warmup_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint for basic API info",
        "operationId": "root_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/test-500": {
      "post": {
        "summary": "Test 500 Debug",
        "description": "Test endpoint to see if 500 errors are systemic",
        "operationId": "test_500_debug_api_test_500_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/test-alert": {
      "get": {
        "summary": "Test Alert",
        "operationId": "test_alert_api_test_alert_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/test-auth": {
      "post": {
        "summary": "Test Auth Debug",
        "description": "Test endpoint to see if auth is causing 500 errors",
        "operationId": "test_auth_debug_api_test_auth_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Serve Api Info",
        "operationId": "serve_api_info__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "head": {
        "summary": "Serve Api Info",
        "operationId": "serve_api_info__head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddEvaluatorRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "role"
        ],
        "title": "AddEvaluatorRequest"
      },
      "BatchEventRequest": {
        "properties": {
          "league_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "League Ids"
          }
        },
        "type": "object",
        "required": [
          "league_ids"
        ],
        "title": "BatchEventRequest"
      },
      "BatchEventsByIdsRequest": {
        "properties": {
          "event_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Event Ids"
          }
        },
        "type": "object",
        "required": [
          "event_ids"
        ],
        "title": "BatchEventsByIdsRequest"
      },
      "BatchPlayerRequest": {
        "properties": {
          "event_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Event Ids"
          }
        },
        "type": "object",
        "required": [
          "event_ids"
        ],
        "title": "BatchPlayerRequest"
      },
      "DrillEvaluationRequest": {
        "properties": {
          "player_id": {
            "type": "string",
            "title": "Player Id"
          },
          "drill_type": {
            "type": "string",
            "title": "Drill Type"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": ""
          },
          "recorded_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recorded At"
          }
        },
        "type": "object",
        "required": [
          "player_id",
          "drill_type",
          "value"
        ],
        "title": "DrillEvaluationRequest"
      },
      "DrillResultCreate": {
        "properties": {
          "player_id": {
            "type": "string",
            "title": "Player Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "event_id": {
            "type": "string",
            "title": "Event Id"
          },
          "recorded_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recorded At"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "player_id",
          "type",
          "value",
          "event_id"
        ],
        "title": "DrillResultCreate"
      },
      "EvaluatorSchema": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "event_id": {
            "type": "string",
            "title": "Event Id"
          },
          "added_by": {
            "type": "string",
            "title": "Added By"
          },
          "added_at": {
            "type": "string",
            "title": "Added At"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "email",
          "role",
          "event_id",
          "added_by",
          "added_at"
        ],
        "title": "EvaluatorSchema"
      },
      "EventCreateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "EventCreateRequest"
      },
      "EventUpdateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "drillTemplate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Drilltemplate"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "EventUpdateRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PlayerCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "age_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Group"
          },
          "photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PlayerCreate"
      },
      "PlayerSchema": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "age_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Group"
          },
          "photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Photo Url"
          },
          "event_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "40m_dash": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "40M Dash"
          },
          "vertical_jump": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vertical Jump"
          },
          "catching": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catching"
          },
          "throwing": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Throwing"
          },
          "agility": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agility"
          },
          "composite_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Composite Score"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "PlayerSchema"
      },
      "SetRoleRequest": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "SetRoleRequest"
      },
      "UploadRequest": {
        "properties": {
          "event_id": {
            "type": "string",
            "title": "Event Id"
          },
          "players": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Players"
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "players"
        ],
        "title": "UploadRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}